package com.gosoft.gobtp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HoraireTravailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoraireTravailAllPropertiesEquals(HoraireTravail expected, HoraireTravail actual) {
        assertHoraireTravailAutoGeneratedPropertiesEquals(expected, actual);
        assertHoraireTravailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoraireTravailAllUpdatablePropertiesEquals(HoraireTravail expected, HoraireTravail actual) {
        assertHoraireTravailUpdatableFieldsEquals(expected, actual);
        assertHoraireTravailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoraireTravailAutoGeneratedPropertiesEquals(HoraireTravail expected, HoraireTravail actual) {
        assertThat(expected)
            .as("Verify HoraireTravail auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoraireTravailUpdatableFieldsEquals(HoraireTravail expected, HoraireTravail actual) {
        assertThat(expected)
            .as("Verify HoraireTravail relevant properties")
            .satisfies(e -> assertThat(e.getDebutMatin()).as("check debutMatin").isEqualTo(actual.getDebutMatin()))
            .satisfies(e -> assertThat(e.getFinMatin()).as("check finMatin").isEqualTo(actual.getFinMatin()))
            .satisfies(e -> assertThat(e.getDebutSoir()).as("check debutSoir").isEqualTo(actual.getDebutSoir()))
            .satisfies(e -> assertThat(e.getFinSoir()).as("check finSoir").isEqualTo(actual.getFinSoir()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()))
            .satisfies(e -> assertThat(e.getJour()).as("check jour").isEqualTo(actual.getJour()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoraireTravailUpdatableRelationshipsEquals(HoraireTravail expected, HoraireTravail actual) {
        assertThat(expected)
            .as("Verify HoraireTravail relationships")
            .satisfies(e -> assertThat(e.getChantier()).as("check chantier").isEqualTo(actual.getChantier()))
            .satisfies(e -> assertThat(e.getOuvrier()).as("check ouvrier").isEqualTo(actual.getOuvrier()));
    }
}
