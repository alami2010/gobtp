package com.gosoft.gobtp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MateriauManquantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriauManquantAllPropertiesEquals(MateriauManquant expected, MateriauManquant actual) {
        assertMateriauManquantAutoGeneratedPropertiesEquals(expected, actual);
        assertMateriauManquantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriauManquantAllUpdatablePropertiesEquals(MateriauManquant expected, MateriauManquant actual) {
        assertMateriauManquantUpdatableFieldsEquals(expected, actual);
        assertMateriauManquantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriauManquantAutoGeneratedPropertiesEquals(MateriauManquant expected, MateriauManquant actual) {
        assertThat(expected)
            .as("Verify MateriauManquant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriauManquantUpdatableFieldsEquals(MateriauManquant expected, MateriauManquant actual) {
        assertThat(expected)
            .as("Verify MateriauManquant relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()))
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMateriauManquantUpdatableRelationshipsEquals(MateriauManquant expected, MateriauManquant actual) {
        assertThat(expected)
            .as("Verify MateriauManquant relationships")
            .satisfies(e -> assertThat(e.getChantier()).as("check chantier").isEqualTo(actual.getChantier()));
    }
}
